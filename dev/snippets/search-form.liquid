{% comment %}
  Reusable search form component with BloxMania theme styling

  Accepts:
  - placeholder: Custom placeholder text (optional)
  - class: Additional CSS classes (optional)
  - id: Input ID (optional)
  - action: Form action URL (optional, defaults to search route)
  - method: Form method (optional, defaults to 'get')

  Usage:
  {% render 'search-form', placeholder: 'Search products...', class: 'my-custom-class' %}
{% endcomment %}

{%- liquid
  assign placeholder_text = placeholder | default: 'general.search.placeholder' | t
  assign input_id = id | default: 'Search-Form'
  assign form_action = action | default: routes.search_url
  assign form_method = method | default: 'get'
  assign additional_classes = class | default: ''
-%}

<div class="search-form {{ additional_classes }}">
  <form action="{{ form_action }}" method="{{ form_method }}" role="search" class="search-form__container">
    <div class="search-form__input-wrapper">
      <!-- Search Icon -->
      <div class="search-form__icon">
        {% render 'icon', icon: 'search', class: 'search-form__icon-svg' %}
      </div>

      <input
        type="search"
        name="q"
        id="{{ input_id }}"
        class="search-form__input"
        placeholder="{{ placeholder_text }}"
        aria-label="{{ 'general.search.search' | t }}"
        autocomplete="off"
        spellcheck="false"
        {% if search.terms %}
          value="{{ search.terms | escape }}"
        {% endif %}
      >

      <!-- Clear Button (only show when there's input) -->
      <button
        type="reset"
        class="search-form__clear{% unless search.terms %} hidden{% endunless %}"
        aria-label="{{ 'general.search.reset' | t }}"
      >
        {% render 'icon', icon: 'close', class: 'search-form__clear-icon' %}
      </button>

      <!-- Submit Button -->
      <button
        type="submit"
        class="search-form__submit"
        aria-label="{{ 'general.search.search' | t }}"
      >
        {% render 'icon', icon: 'search', class: 'search-form__submit-icon' %}
      </button>
    </div>

    <!-- Hidden inputs for search options -->
    <input name="options[prefix]" type="hidden" value="last">
  </form>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const searchForm = document.querySelector('.search-form');
    if (!searchForm) return;

    const input = searchForm.querySelector('.search-form__input');
    const clearButton = searchForm.querySelector('.search-form__clear');
    const form = searchForm.querySelector('.search-form__container');

    // Show/hide clear button based on input value
    function toggleClearButton() {
      if (input.value.length > 0) {
        clearButton.classList.remove('hidden');
      } else {
        clearButton.classList.add('hidden');
      }
    }

    // Initialize clear button state
    toggleClearButton();

    // Listen for input changes
    input.addEventListener('input', toggleClearButton);

    // Handle clear button click
    clearButton.addEventListener('click', function (e) {
      e.preventDefault();
      input.value = '';
      input.focus();
      toggleClearButton();
    });

    // Handle form submission
    form.addEventListener('submit', function (e) {
      const query = input.value.trim();
      if (!query) {
        e.preventDefault();
        input.focus();
      }
    });
  });
</script>
