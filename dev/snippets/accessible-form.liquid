{% comment %}
  Renders an accessible form with proper labeling and error handling

  Accepts:
  - form_id: {String} Unique ID for the form (required)
  - form_class: {String} CSS classes for the form (optional)
  - form_action: {String} Form action URL (optional)
  - form_method: {String} Form method (default: "post")
  - form_enctype: {String} Form encoding type (optional)
  - form_novalidate: {Boolean} Disable HTML5 validation (default: false)
  - form_autocomplete: {String} Form autocomplete setting (default: "on")
  - form_aria_label: {String} ARIA label for the form (optional)
  - form_aria_describedby: {String} ARIA describedby for the form (optional)
  - submit_button_text: {String} Submit button text (default: "Submit")
  - submit_button_class: {String} Submit button CSS classes (optional)
  - loading_text: {String} Loading state text (default: "Submitting...")
  - success_message: {String} Success message (optional)
  - error_message: {String} Error message (optional)

  Usage:
  {% render 'accessible-form',
    form_id: 'contact-form',
    form_action: '/contact',
    form_aria_label: 'Contact form',
    submit_button_text: 'Send Message'
  %}
{% endcomment %}

{%- liquid
  assign form_method = form_method | default: 'post'
  assign form_autocomplete = form_autocomplete | default: 'on'
  assign submit_button_text = submit_button_text | default: 'Submit'
  assign loading_text = loading_text | default: 'Submitting...'
  assign form_novalidate = form_novalidate | default: false
-%}

<form
  id="{{ form_id }}"
  class="accessible-form {% if form_class %}{{ form_class }}{% endif %}"
  {% if form_action %}
    action="{{ form_action }}"
  {% endif %}
  method="{{ form_method }}"
  {% if form_enctype %}
    enctype="{{ form_enctype }}"
  {% endif %}
  {% if form_novalidate %}
    novalidate
  {% endif %}
  autocomplete="{{ form_autocomplete }}"
  {% if form_aria_label %}
    aria-label="{{ form_aria_label }}"
  {% endif %}
  {% if form_aria_describedby %}
    aria-describedby="{{ form_aria_describedby }}"
  {% endif %}
  data-form-id="{{ form_id }}"
>
  <!-- Form Status Messages -->
  <div class="form-status" role="status" aria-live="polite" aria-atomic="true">
    {% if success_message %}
      <div class="success-message" role="alert" id="{{ form_id }}-success">
        <svg class="w-5 h-5 inline mr-2" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
        </svg>
        {{ success_message }}
      </div>
    {% endif %}

    {% if error_message %}
      <div class="error-message" role="alert" id="{{ form_id }}-error">
        <svg class="w-5 h-5 inline mr-2" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
          <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
        </svg>
        {{ error_message }}
      </div>
    {% endif %}
  </div>

  <!-- Form Fields Container -->
  <div class="form-fields">
    {{ content }}
  </div>

  <!-- Submit Button -->
  <div class="form-submit">
    <button
      type="submit"
      class="submit-button {% if submit_button_class %}{{ submit_button_class }}{% endif %}"
      id="{{ form_id }}-submit"
      aria-describedby="{{ form_id }}-loading-text"
    >
      <span class="button-text">{{ submit_button_text }}</span>
      <span class="loading-text sr-only" id="{{ form_id }}-loading-text">{{ loading_text }}</span>
      <span class="loading-spinner hidden" aria-hidden="true">
        <svg class="animate-spin w-4 h-4" fill="none" viewBox="0 0 24 24">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
      </span>
    </button>
  </div>
</form>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('{{ form_id }}');
    if (!form) return;

    const submitButton = form.querySelector('.submit-button');
    const buttonText = submitButton.querySelector('.button-text');
    const loadingText = submitButton.querySelector('.loading-text');
    const loadingSpinner = submitButton.querySelector('.loading-spinner');

    // Enhanced form accessibility
    if (window.accessibilityUtils) {
      window.accessibilityUtils.enhanceFormAccessibility(form);
    }

    // Form submission handling
    form.addEventListener('submit', function (e) {
      // Show loading state
      submitButton.disabled = true;
      submitButton.setAttribute('aria-busy', 'true');
      buttonText.style.display = 'none';
      loadingText.classList.remove('sr-only');
      loadingSpinner.style.display = 'inline-block';

      // Announce loading state to screen readers
      if (window.accessibilityUtils) {
        window.accessibilityUtils.announce('{{ loading_text }}', 'assertive');
      }
    });

    // Reset form state on page load (in case of back button)
    window.addEventListener('pageshow', function (event) {
      if (event.persisted) {
        resetFormState();
      }
    });

    function resetFormState() {
      submitButton.disabled = false;
      submitButton.removeAttribute('aria-busy');
      buttonText.style.display = 'inline';
      loadingText.classList.add('sr-only');
      loadingSpinner.style.display = 'none';
    }

    // Handle form errors
    form.addEventListener(
      'invalid',
      function (e) {
        e.preventDefault();
        const firstInvalidField = form.querySelector(':invalid');
        if (firstInvalidField) {
          firstInvalidField.focus();
          firstInvalidField.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
      },
      true,
    );
  });
</script>
