{%- style -%}
  .product-page {
    padding: 2rem;
    max-width: 1200px;
    margin: 0 auto;
    padding-top: 100px;
  }

  .product-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
    align-items: start;
  }

  .product-gallery {
    position: sticky;
    top: 100px;
  }

  .product-image {
    width: 100%;
    border-radius: 16px;
    overflow: hidden;
    background: var(--surface-color);
    border: 1px solid var(--border-color);
  }

  .product-image img {
    width: 100%;
    height: auto;
    display: block;
  }

  .product-thumbnails {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
  }

  .product-thumbnail {
    width: 80px;
    height: 80px;
    border-radius: 8px;
    overflow: hidden;
    cursor: pointer;
    border: 2px solid transparent;
    transition: all 0.3s ease;
  }

  .product-thumbnail.active {
    border-color: var(--primary-color);
  }

  .product-thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .product-info {
    padding: 1rem 0;
  }

  .product-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    color: var(--text-color);
  }

  .product-price {
    font-size: 2rem;
    font-weight: 700;
    color: var(--primary-color);
    margin-bottom: 1.5rem;
  }

  .product-compare-price {
    text-decoration: line-through;
    color: var(--text-muted);
    margin-right: 1rem;
    font-size: 1.5rem;
  }

  .product-description {
    color: var(--text-muted);
    line-height: 1.6;
    margin-bottom: 2rem;
  }

  .product-variants {
    margin-bottom: 2rem;
  }

  .variant-group {
    margin-bottom: 1.5rem;
  }

  .variant-label {
    display: block;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: var(--text-color);
  }

  .variant-options {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .variant-option {
    padding: 0.5rem 1rem;
    border: 2px solid var(--border-color);
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    background: transparent;
    color: var(--text-color);
  }

  .variant-option:hover {
    border-color: var(--primary-color);
  }

  .variant-option.selected {
    background: var(--primary-color);
    color: #000;
    border-color: var(--primary-color);
  }

  .variant-option.disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .quantity-selector {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 2rem;
  }

  .quantity-btn {
    width: 40px;
    height: 40px;
    border: 2px solid var(--border-color);
    background: transparent;
    color: var(--text-color);
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .quantity-btn:hover {
    border-color: var(--primary-color);
  }

  .quantity-input {
    width: 60px;
    height: 40px;
    text-align: center;
    border: 2px solid var(--border-color);
    background: transparent;
    color: var(--text-color);
    border-radius: 8px;
  }

  .add-to-cart-section {
    margin-bottom: 2rem;
  }

  .add-to-cart-btn {
    width: 100%;
    padding: 1rem 2rem;
    background: var(--primary-color);
    color: #000;
    border: none;
    border-radius: 12px;
    font-size: 1.125rem;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-bottom: 1rem;
  }

  .add-to-cart-btn:hover {
    background: #e6c200;
    transform: translateY(-2px);
    box-shadow: 0 0 20px rgba(255, 216, 0, 0.3);
  }

  .add-to-cart-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }

  .product-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 0;
    border-top: 1px solid var(--border-color);
    border-bottom: 1px solid var(--border-color);
    margin-bottom: 2rem;
  }

  .product-rating {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .stars {
    color: var(--primary-color);
  }

  .product-stock {
    color: #10b981;
    font-weight: 600;
  }

  .product-stock.low {
    color: #f59e0b;
  }

  .product-stock.out {
    color: #ef4444;
  }

  .product-features {
    margin-bottom: 2rem;
  }

  .feature-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
    color: var(--text-muted);
  }

  .feature-icon {
    color: var(--primary-color);
    width: 16px;
    height: 16px;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .product-page {
      padding: 1rem;
      padding-top: 80px;
    }

    .product-container {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .product-gallery {
      position: static;
    }

    .product-title {
      font-size: 2rem;
    }

    .product-price {
      font-size: 1.5rem;
    }
  }
{%- endstyle -%}

<div class="product-page">
  <div class="product-container">
    <!-- Product Gallery -->
    <div class="product-gallery">
      <div class="product-image">
        {% if product.featured_image != blank %}
          <img
            src="{{ product.featured_image | image_url: width: 600 }}"
            alt="{{ product.title }}"
            id="main-product-image"
            width="600"
            height="600"
            loading="lazy"
          >
        {% else %}
          <div style="height: 400px; display: flex; align-items: center; justify-content: center; color: var(--text-muted);">
            No Image Available
          </div>
        {% endif %}
      </div>

      {% if product.images.size > 1 %}
        <div class="product-thumbnails">
          {% for image in product.images %}
            <div
              class="product-thumbnail {% if forloop.first %}active{% endif %}"
              data-image="{{ image | image_url: width: 600 }}"
            >
              <img src="{{ image | image_url: width: 80 }}" alt="{{ product.title }}" width="80" height="80">
            </div>
          {% endfor %}
        </div>
      {% endif %}
    </div>

    <!-- Product Information -->
    <div class="product-info">
      <h1 class="product-title">{{ product.title }}</h1>

      <div class="product-price">
        {% if product.compare_at_price > product.price %}
          <span class="product-compare-price">{{ product.compare_at_price | money }}</span>
        {% endif %}
        {{ product.price | money }}
      </div>

      {% if product.description != blank %}
        <div class="product-description">
          {{ product.description }}
        </div>
      {% endif %}

      <!-- Product Variants -->
      {% if product.variants.size > 1 %}
        <form action="{{ routes.cart_add_url }}" method="post" enctype="multipart/form-data" id="product-form">
          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" id="variant-id">

          {% for option in product.options_with_values %}
            <div class="variant-group">
              <label class="variant-label">{{ option.name }}</label>
              <div class="variant-options">
                {% for value in option.values %}
                  <button
                    type="button"
                    class="variant-option {% if option.selected_value == value %}selected{% endif %}"
                    data-option="{{ option.name | handleize }}"
                    data-value="{{ value | handleize }}"
                  >
                    {{ value }}
                  </button>
                {% endfor %}
              </div>
            </div>
          {% endfor %}

          <!-- Quantity Selector -->
          <div class="quantity-selector">
            <label class="variant-label">Quantity</label>
            <button type="button" class="quantity-btn" onclick="changeQuantity(-1)">-</button>
            <input type="number" name="quantity" value="1" min="1" class="quantity-input" id="quantity-input">
            <button type="button" class="quantity-btn" onclick="changeQuantity(1)">+</button>
          </div>

          <!-- Add to Cart -->
          <div class="add-to-cart-section">
            <button
              type="submit"
              class="add-to-cart-btn"
              {% unless product.available %}
                disabled
              {% endunless %}
            >
              {% if product.available %}
                Add to Cart
              {% else %}
                Out of Stock
              {% endif %}
            </button>
          </div>
        </form>
      {% else %}
        <!-- Single variant product -->
        <form action="{{ routes.cart_add_url }}" method="post" enctype="multipart/form-data">
          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">

          <div class="quantity-selector">
            <label class="variant-label">Quantity</label>
            <button type="button" class="quantity-btn" onclick="changeQuantity(-1)">-</button>
            <input type="number" name="quantity" value="1" min="1" class="quantity-input" id="quantity-input">
            <button type="button" class="quantity-btn" onclick="changeQuantity(1)">+</button>
          </div>

          <div class="add-to-cart-section">
            <button
              type="submit"
              class="add-to-cart-btn"
              {% unless product.available %}
                disabled
              {% endunless %}
            >
              {% if product.available %}
                Add to Cart
              {% else %}
                Out of Stock
              {% endif %}
            </button>
          </div>
        </form>
      {% endif %}

      <!-- Product Meta -->
      <div class="product-meta">
        <div class="product-rating">
          <span class="stars">★★★★★</span>
          <span>4.8 (127 reviews)</span>
        </div>
        <div class="product-stock {% unless product.available %}out{% endunless %}">
          {% if product.available %}
            {% if product.inventory_quantity <= 5 and product.inventory_quantity > 0 %}
              <span class="low">Low Stock</span>
            {% else %}
              <span>In Stock</span>
            {% endif %}
          {% else %}
            <span>Out of Stock</span>
          {% endif %}
        </div>
      </div>

      <!-- Product Features -->
      <div class="product-features">
        <div class="feature-item">
          <svg class="feature-icon" fill="currentColor" viewBox="0 0 24 24">
            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          <span>Instant Delivery</span>
        </div>
        <div class="feature-item">
          <svg class="feature-icon" fill="currentColor" viewBox="0 0 24 24">
            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          <span>Secure Payment</span>
        </div>
        <div class="feature-item">
          <svg class="feature-icon" fill="currentColor" viewBox="0 0 24 24">
            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          <span>24/7 Support</span>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // Product image gallery
  document.querySelectorAll('.product-thumbnail').forEach((thumbnail) => {
    thumbnail.addEventListener('click', function () {
      const mainImage = document.getElementById('main-product-image');
      const newImageSrc = this.dataset.image;

      if (mainImage && newImageSrc) {
        mainImage.src = newImageSrc;

        // Update active thumbnail
        document.querySelectorAll('.product-thumbnail').forEach((t) => t.classList.remove('active'));
        this.classList.add('active');
      }
    });
  });

  // Quantity selector
  function changeQuantity(change) {
    const input = document.getElementById('quantity-input');
    const newValue = Math.max(1, parseInt(input.value) + change);
    input.value = newValue;
  }

  // Variant selection
  document.querySelectorAll('.variant-option').forEach((option) => {
    option.addEventListener('click', function () {
      const optionName = this.dataset.option;
      const optionValue = this.dataset.value;

      // Update selected state
      document.querySelectorAll(`[data-option="${optionName}"]`).forEach((opt) => {
        opt.classList.remove('selected');
      });
      this.classList.add('selected');

      // Update variant ID (simplified - in real implementation, you'd need to map variants)
      updateVariantSelection();
    });
  });

  function updateVariantSelection() {
    // This is a simplified version - in a real implementation,
    // you'd need to map the selected options to the correct variant ID
    const selectedOptions = {};

    document.querySelectorAll('.variant-option.selected').forEach((option) => {
      selectedOptions[option.dataset.option] = option.dataset.value;
    });

    // For now, we'll just use the first available variant
    // In a real implementation, you'd find the matching variant
    const variantId = document.querySelector('input[name="id"]').value;
    document.getElementById('variant-id').value = variantId;
  }

  // Form submission
  document.querySelectorAll('form').forEach((form) => {
    form.addEventListener('submit', function (e) {
      const submitButton = this.querySelector('.add-to-cart-btn');
      const originalText = submitButton.textContent;

      submitButton.textContent = 'Adding...';
      submitButton.disabled = true;

      // Form will be handled by Shopify
      // This is just for UI feedback
    });
  });
</script>
