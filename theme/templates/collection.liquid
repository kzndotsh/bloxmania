{% comment %}
  Comprehensive Collection Page Template
  Uses modern component-based architecture with Tailwind CSS
{% endcomment %}

{{ 'component-product-form.css' | asset_url | stylesheet_tag }}
{{ 'component-breadcrumb.css' | asset_url | stylesheet_tag }}

<script src="{{ 'feature-collection.js' | asset_url }}" defer="defer"></script>

{%- assign current_view = 'grid' -%}

<!-- Collection Schema Markup -->
<script type="application/ld+json">
  {
    "@context": "https://schema.org/",
    "@type": "CollectionPage",
    "name": {{ collection.title | json }},
    "description": {{ collection.description | strip_html | truncatewords: 150 | json }},
    "url": {{ request.origin | append: collection.url | json }},
    "numberOfItems": {{ collection.products_count | json }},
    "mainEntity": {
      "@type": "ItemList",
      "numberOfItems": {{ collection.products_count | json }},
      "itemListElement": [
        {%- for product in collection.products limit: 12 -%}
          {%- unless forloop.first -%},{%- endunless -%}
          {
            "@type": "ListItem",
            "position": {{ forloop.index | json }},
            "item": {
              "@type": "Product",
              "name": {{ product.title | json }},
              "url": {{ request.origin | append: product.url | json }},
              "image": {{ product.featured_image | image_url: width: 300 | json }},
              "offers": {
                "@type": "Offer",
                "price": {{ product.price | divided_by: 100.0 | json }},
                "priceCurrency": {{ cart.currency.iso_code | json }},
                "availability": "{% if product.available %}https://schema.org/InStock{% else %}https://schema.org/OutOfStock{% endif %}"
              }
            }
          }
        {%- endfor -%}
      ]
    }
  }
</script>

<div class="bg-background text-white min-h-screen pt-20">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Breadcrumb Navigation -->
    {% render 'breadcrumb', collection: collection %}

    <!-- Collection Header -->
    <div class="collection-header mb-8">
      <div class="text-center max-w-4xl mx-auto">
        <h1 class="text-3xl lg:text-5xl font-bold text-white mb-4">
          {{ collection.title | escape }}
        </h1>

        {%- if collection.description != blank -%}
          <div class="collection-description prose prose-invert prose-lg max-w-none mb-6">
            {{ collection.description }}
          </div>
        {%- endif -%}

        <div class="collection-meta flex items-center justify-center gap-4 text-gray-400">
          <span class="flex items-center gap-1">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path d="M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z"/>
            </svg>
            {{ collection.products_count }}
            {%- if collection.products_count == 1 -%}
              {{ 'collections.general.item' | t | default: 'item' }}
            {%- else -%}
              {{ 'collections.general.items' | t | default: 'items' }}
            {%- endif -%}
          </span>
        </div>
      </div>
    </div>

    <!-- Collection Filters and Sorting -->
    <div class="collection-toolbar mb-8">
      <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4">
        <!-- Filters Toggle (Mobile) -->
        <div class="lg:hidden">
          <button
            type="button"
            class="filters-toggle flex items-center gap-2 bg-gray-800 hover:bg-gray-700 text-white px-4 py-2 rounded-lg border border-gray-600 transition-colors duration-200"
            onclick="toggleFilters()"
          >
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.207A1 1 0 013 6.5V4z"/>
            </svg>
            {{ 'collections.filtering.filter_button' | t | default: 'Filter' }}
          </button>
        </div>

        <!-- Sort Options -->
        <div class="sort-options flex items-center gap-4">
          <form class="relative">
            <select
              id="sort-by"
              name="sort_by"
              class="sort-select bg-gray-900/80 backdrop-blur-sm border border-gray-700/50 text-white rounded-xl px-4 py-3 pr-10 text-sm font-medium shadow-lg focus:border-primary/50 focus:outline-none focus:ring-0 appearance-none cursor-pointer transition-all duration-300 hover:bg-gray-800/80"
              onchange="this.form.submit()"
            >
              <option
                value="manual"
                {% if collection.sort_by == 'manual' %}
                  selected
                {% endif %}
              >
                {{ 'collections.sorting.featured' | t | default: 'Featured' }}
              </option>
              <option
                value="best-selling"
                {% if collection.sort_by == 'best-selling' %}
                  selected
                {% endif %}
              >
                {{ 'collections.sorting.best_selling' | t | default: 'Best selling' }}
              </option>
              <option
                value="title-ascending"
                {% if collection.sort_by == 'title-ascending' %}
                  selected
                {% endif %}
              >
                {{ 'collections.sorting.alphabetically_a_z' | t | default: 'Alphabetically, A-Z' }}
              </option>
              <option
                value="title-descending"
                {% if collection.sort_by == 'title-descending' %}
                  selected
                {% endif %}
              >
                {{ 'collections.sorting.alphabetically_z_a' | t | default: 'Alphabetically, Z-A' }}
              </option>
              <option
                value="price-ascending"
                {% if collection.sort_by == 'price-ascending' %}
                  selected
                {% endif %}
              >
                {{ 'collections.sorting.price_low_to_high' | t | default: 'Price, low to high' }}
              </option>
              <option
                value="price-descending"
                {% if collection.sort_by == 'price-descending' %}
                  selected
                {% endif %}
              >
                {{ 'collections.sorting.price_high_to_low' | t | default: 'Price, high to low' }}
              </option>
              <option
                value="created-ascending"
                {% if collection.sort_by == 'created-ascending' %}
                  selected
                {% endif %}
              >
                {{ 'collections.sorting.date_old_to_new' | t | default: 'Date, old to new' }}
              </option>
              <option
                value="created-descending"
                {% if collection.sort_by == 'created-descending' %}
                  selected
                {% endif %}
              >
                {{ 'collections.sorting.date_new_to_old' | t | default: 'Date, new to old' }}
              </option>
            </select>
            <!-- Custom dropdown arrow -->
            <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
              <svg
                class="w-4 h-4 text-gray-400 transition-colors duration-300"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
              </svg>
            </div>
          </form>
        </div>

        <!-- View Toggle -->
        <div class="view-toggle flex items-center gap-4">
          <div class="view-switcher relative bg-gray-900/80 backdrop-blur-sm rounded-xl border border-gray-700/50 p-1 shadow-lg">
            <div
              class="view-slider absolute top-1 left-1 w-10 h-10 bg-gradient-to-r from-primary to-yellow-400 rounded-lg transition-transform duration-300 ease-out shadow-md"
            ></div>
            <button
              type="button"
              class="view-btn view-btn--grid relative z-10 flex items-center justify-center w-10 h-10 rounded-lg transition-all duration-300 {% unless current_view == 'list' %}active{% endunless %}"
              onclick="setView('grid')"
              aria-label="{{ 'collections.general.grid_view' | t | default: 'Grid view' }}"
              title="Grid View"
            >
              <svg class="w-5 h-5 transition-colors duration-300" fill="currentColor" viewBox="0 0 24 24">
                <path d="M3 3h7v7H3V3zm0 11h7v7H3v-7zm11-11h7v7h-7V3zm0 11h7v7h-7v-7z"/>
              </svg>
            </button>
            <button
              type="button"
              class="view-btn view-btn--list relative z-10 flex items-center justify-center w-10 h-10 rounded-lg transition-all duration-300 {% if current_view == 'list' %}active{% endif %}"
              onclick="setView('list')"
              aria-label="{{ 'collections.general.list_view' | t | default: 'List view' }}"
              title="List View"
            >
              <svg class="w-5 h-5 transition-colors duration-300" fill="currentColor" viewBox="0 0 24 24">
                <path d="M4 6h16v2H4V6zm0 5h16v2H4v-2zm0 5h16v2H4v-2z"/>
              </svg>
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Products Grid -->
    {%- if collection.products.size > 0 -%}
      <div class="products-container">
        {%- paginate collection.products by 24 -%}
          <div
            id="products-grid"
            class="products-grid {% if current_view == 'list' %}list-view flex flex-col gap-4{% else %}grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6{% endif %}"
          >
            {%- for product in collection.products -%}
              <div class="product-item h-full">
                {% render 'card-product',
                  card_product: product,
                  show_vendor: true,
                  show_compare_at_price: true,
                  lazy_load: true,
                  layout: current_view
                %}
              </div>
            {%- endfor -%}
          </div>

          <!-- Pagination -->
          {%- if paginate.pages > 1 -%}
            <div class="pagination-wrapper mt-12">
              {% render 'pagination', paginate: paginate %}
            </div>
          {%- endif -%}
        {%- endpaginate -%}
      </div>
    {%- else -%}
      <!-- Empty Collection State -->
      <div class="empty-collection text-center py-16">
        <div class="max-w-md mx-auto">
          <div class="mb-6">
            <svg class="w-24 h-24 mx-auto text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"/>
            </svg>
          </div>
          <h2 class="text-2xl font-bold text-white mb-4">
            {{ 'collections.general.no_matches' | t | default: 'No products found' }}
          </h2>
          <p class="text-gray-400 mb-6">
            {{
              'collections.general.no_matches_description'
              | t
              | default: 'This collection is empty or no products match your current filters.'
            }}
          </p>
          <a
            href="{{ routes.all_products_collection_url }}"
            class="inline-flex items-center gap-2 bg-primary hover:bg-primary-dark text-black font-medium px-6 py-3 rounded-lg transition-colors duration-200"
          >
            {{ 'collections.general.browse_all' | t | default: 'Browse All Products' }}
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
            </svg>
          </a>
        </div>
      </div>
    {%- endif -%}
  </div>
</div>

<style>
  /* Modern View Toggle Styles */
  .view-switcher {
    position: relative;
    display: flex;
    align-items: center;
    background: rgba(17, 24, 39, 0.8);
    backdrop-filter: blur(8px);
    border-radius: 0.75rem;
    border: 1px solid rgba(55, 65, 81, 0.5);
    padding: 0.25rem;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }

  .view-slider {
    position: absolute;
    top: 0.25rem;
    left: 0.25rem;
    width: 2.5rem;
    height: 2.5rem;
    background: linear-gradient(135deg, #ffd800 0%, #ffed4e 100%);
    border-radius: 0.5rem;
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }

  .view-btn {
    position: relative;
    z-index: 10;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    background: transparent;
    border: none;
    border-radius: 0.5rem;
    color: #9ca3af;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .view-btn:hover {
    color: #ffffff;
    transform: scale(1.05);
  }

  .view-btn.active {
    color: #000000;
  }

  .view-btn:focus {
    outline: none;
    box-shadow: 0 0 0 1px rgba(255, 216, 0, 0.5);
  }

  /* Slider Animation */
  .view-btn--list.active ~ .view-slider,
  .view-switcher:has(.view-btn--list.active) .view-slider {
    transform: translateX(2.5rem);
  }

  /* List View Styles */
  .products-grid.list-view {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .products-grid.list-view .product-item {
    width: 100%;
  }

  /* List Card Specific Styles */
  .list-card .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .list-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
  }

  /* Animation for view changes */
  .products-grid {
    transition: all 0.3s ease;
  }

  .product-item {
    animation: fadeInUp 0.6s ease-out;
    animation-fill-mode: both;
  }

  .product-item:nth-child(1) {
    animation-delay: 0.1s;
  }
  .product-item:nth-child(2) {
    animation-delay: 0.2s;
  }
  .product-item:nth-child(3) {
    animation-delay: 0.3s;
  }
  .product-item:nth-child(4) {
    animation-delay: 0.4s;
  }
  .product-item:nth-child(5) {
    animation-delay: 0.5s;
  }
  .product-item:nth-child(6) {
    animation-delay: 0.6s;
  }
  .product-item:nth-child(7) {
    animation-delay: 0.7s;
  }
  .product-item:nth-child(8) {
    animation-delay: 0.8s;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .collection-toolbar {
      flex-direction: column;
      gap: 1rem;
    }

    .products-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 1rem;
    }
  }

  @media (max-width: 640px) {
    .products-grid {
      grid-template-columns: 1fr;
    }
  }

  /* Accessibility improvements */
  @media (prefers-reduced-motion: reduce) {
    .products-grid,
    .product-item {
      animation: none;
      transition: none;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .view-btn {
      border-width: 2px;
    }

    .view-btn.active {
      border-width: 3px;
    }
  }
</style>

<script>
  // Simple client-side view toggle functionality
  function setView(viewType) {
    const grid = document.getElementById('products-grid');
    const buttons = document.querySelectorAll('.view-btn');
    const viewLabel = document.querySelector('.view-toggle span');

    // Update grid layout
    if (viewType === 'list') {
      grid.classList.remove('grid', 'grid-cols-1', 'sm:grid-cols-2', 'lg:grid-cols-3', 'xl:grid-cols-4', 'gap-6');
      grid.classList.add('list-view', 'flex', 'flex-col', 'gap-4');
    } else {
      grid.classList.remove('list-view', 'flex', 'flex-col', 'gap-4');
      grid.classList.add('grid', 'grid-cols-1', 'sm:grid-cols-2', 'lg:grid-cols-3', 'xl:grid-cols-4', 'gap-6');
    }

    // Update button states
    buttons.forEach((btn) => {
      btn.classList.remove('active');
      if (btn.classList.contains(`view-btn--${viewType}`)) {
        btn.classList.add('active');
      }
    });

    // View label stays static - no need to update

    // Store user preference
    localStorage.setItem('collection-view-preference', viewType);

    // Update product cards for list view if needed
    updateProductCards(viewType);
  }

  function updateProductCards(viewType) {
    const productItems = document.querySelectorAll('.product-item');

    productItems.forEach((item) => {
      if (viewType === 'list') {
        // Add list-specific classes or styling
        item.classList.add('list-item');
      } else {
        // Remove list-specific classes
        item.classList.remove('list-item');
      }
    });
  }

  function toggleFilters() {
    // Placeholder for future filter functionality
    console.log('Filter toggle - to be implemented');
  }

  // Initialize view on page load
  document.addEventListener('DOMContentLoaded', function () {
    // Get saved preference or default to grid
    const savedView = localStorage.getItem('collection-view-preference') || 'grid';

    // Apply the saved view
    setView(savedView);
  });
</script>
