{% comment %}
  FAQ Item Component

  Usage:
    {% render 'content-faq-item',
      question: 'How does it work?',
      answer: 'It works great!',
      index: 1,
      classes: 'custom-class'
    %}

  Parameters:
    - question (required): FAQ question text
    - answer (required): FAQ answer text
    - index (required): Unique index for the FAQ item
    - classes (optional): Additional CSS classes
{% endcomment %}

{%- liquid
  assign classes = classes | default: ''
  assign all_classes = 'faq-item border-b border-slate-600 last:border-b-0' | append: ' ' | append: classes
  assign question_id = 'faq-question-' | append: index
  assign answer_id = 'faq-answer-' | append: index
-%}

<div class="{{ all_classes }}">
  <button
    class="faq-question w-full text-left p-6 bg-slate-800 hover:bg-slate-700 transition-colors duration-300 flex items-center justify-between focus:outline-none focus:ring-2 focus:ring-primary"
    aria-expanded="false"
    aria-controls="{{ answer_id }}"
    id="{{ question_id }}"
    type="button"
  >
    <span class="text-lg font-medium text-white pr-4">{{ question }}</span>
    <div class="faq-icon flex-shrink-0">
      {% render 'ui-icon', name: 'plus', classes: 'w-5 h-5 text-primary' %}
    </div>
  </button>

  <div
    class="faq-answer overflow-hidden transition-all duration-300 max-h-0"
    id="{{ answer_id }}"
    aria-labelledby="{{ question_id }}"
  >
    <div class="p-6 bg-slate-750 text-gray-300 leading-relaxed">
      {{ answer }}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const faqQuestion = document.getElementById('{{ question_id }}');
    const faqAnswer = document.getElementById('{{ answer_id }}');

    if (faqQuestion && faqAnswer) {
      faqQuestion.addEventListener('click', function () {
        const isExpanded = faqQuestion.getAttribute('aria-expanded') === 'true';

        // Toggle aria-expanded
        faqQuestion.setAttribute('aria-expanded', !isExpanded);

        // Toggle answer visibility
        if (isExpanded) {
          faqAnswer.classList.remove('active');
          faqAnswer.style.maxHeight = '0';
        } else {
          faqAnswer.classList.add('active');
          faqAnswer.style.maxHeight = faqAnswer.scrollHeight + 'px';
        }
      });
    }
  });
</script>

<style>
  .faq-icon svg {
    transition: transform 0.3s ease;
  }

  .faq-question[aria-expanded='true'] .faq-icon svg {
    transform: rotate(45deg);
  }

  .faq-question[aria-expanded='true'] {
    background-color: rgb(51 65 85) !important; /* slate-700 */
  }
</style>
